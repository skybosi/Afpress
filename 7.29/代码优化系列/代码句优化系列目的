代码句优化系列的主要目的：
0，根本要求：不影响代码的正确作用
1，代码句长度尽可能短小，精简！
2，代码句总数尽可能少，从而缩小代码空间占用内存！
3，效率尽可能最高！能用一步完成，不用两步；能用效率好的，或许可能长，也可以折中设计。
4，代码的应用平台范围也要考虑之内，要在不同编译器，不同操作系统完成相同的效果！
5，考虑一定的可扩展性。
6，如果用到函数，可以试图取消该函数的存在，试图用最简最有效的代码句取代，放在函数引用的位置，减少函数调用压栈出栈等保护现场操作的时间消耗。
7，试图常用预处理。
8，如果可以用简单的数据类型，绝不用稍微复杂一点点的数据类型！至少减小空间占用。
9，能用位运算，就用位运算！如果对汇编语言有所了解，可以内嵌汇编代码辅助补充设计。
10，学会留些分析程序的设计，至于注释类文字，尽可能短小易懂，切勿啰嗦赘余！如果可以，最好另外写解释说明文档(readme之类)。
11，学会调试程序，即使不会也要想办法实现程序的控制运行#include<conio.h>中似乎有此类函数。有时可以自己设计些辅助程序运行时可视化(不同于图形可视化)的小程序。
12，留意算法的设计思考，不要紧紧只追求能够得到结果那么简单！这样才能有所真正的进步！
13，学会必备的数学知识，如果想更加深入思考，生物，物理，甚至哲学等其他科目也要有些许涉略，至少有助于不同科目思考方法的融汇效果！
