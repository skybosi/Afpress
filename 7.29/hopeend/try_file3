#include"fqpresser.h"
int main(int argc, char *argv[])
{
	FILE *fpi = NULL, *fpo = NULL;
	fpi = fopen("../test/picture", "r");
	if (!fpi)
	{
		printf("ERROR");
		exit(0);
	}
	char in = 0, in2 = 0, ch = 0;
	int clen = 0, left = 0;
	int canc1 = 0, canc2 = 0;
	int cans1 = 0, cans2 = 0, out = 0, len = 0;
	bool is7head = 0;			// 判定首7数据双头数组(双7开头为真(小模式)，双7中间为假(大模式))
	bool isxhead = 0;			// 判定非首7数据头(首次出现非7为真～添头，中间部分为假～不添头)
	fpo = fopen("../test/picture.33", "w");
	system("date");
	in = fgetc(fpi);
	while (!feof(fpi))
	{
		canc1 = canc_list[in];
		cans1 = in & meta_cans[canc1];
		if (canc1 == 7)
		{
			len = 15;
			// 加尾
			if (!isxhead)
			{
				isxhead = 1;
				is7head = 1;
				left = (left << 2) + 3;
				clen += 2;		// ？？？？
			}
			in2 = fgetc(fpi);
			canc2 = canc_list[in2];
			cans2 = in2 & meta_cans[canc2];
			cans1 <<= canc2;
			cans1 |= cans2;
			if (is7head)
			{
				out = head7xh[canc2] | cans1;
				is7head = 0;
			}
			else
			{
				len = 16;
				out = head7xm[canc2] | cans1;
			}
		}
		else
		{
			len = 7;
			// 加头
			if (isxhead)
			{
				isxhead = 0;
				left <<= 1;
				clen += 1;
				out = headxh[canc1] | cans1;
			}
			else
			{
				if (canc1 == 6)
					len = 8;
				out = headxm[canc1] | cans1;
			}
		}
		left <<= len;
		out |= left;
		len += clen;
		// 裂解大数
		clen = len % 8;
		left = ((1 << clen) - 1) & out;
		len /= 8;
		while (len--)
		{
			ch = out >> (len * 8 + clen) & 0xff;
			fputc(ch, fpo);
		}
		in = fgetc(fpi);
	}
	system("date");
	printf("ok");
	fclose(fpi);
	fclose(fpo);
	fpi = fpo = NULL;
	return 0;
}